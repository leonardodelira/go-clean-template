// Code generated by MockGen. DO NOT EDIT.
// Source: ./repositories.go
//
// Generated by this command:
//
//	mockgen -source=./repositories.go -package=mockups -destination=../../../mocks/mockups/repositorie/repository.go
//

// Package mockups is a generated GoMock package.
package mockups

import (
	context "context"
	domain "leonardodelira/go-clean-template/internal/core/domain"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockTranslationRepository is a mock of TranslationRepository interface.
type MockTranslationRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTranslationRepositoryMockRecorder
}

// MockTranslationRepositoryMockRecorder is the mock recorder for MockTranslationRepository.
type MockTranslationRepositoryMockRecorder struct {
	mock *MockTranslationRepository
}

// NewMockTranslationRepository creates a new mock instance.
func NewMockTranslationRepository(ctrl *gomock.Controller) *MockTranslationRepository {
	mock := &MockTranslationRepository{ctrl: ctrl}
	mock.recorder = &MockTranslationRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTranslationRepository) EXPECT() *MockTranslationRepositoryMockRecorder {
	return m.recorder
}

// GetTranslations mocks base method.
func (m *MockTranslationRepository) GetTranslations(ctx context.Context) ([]domain.Translation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTranslations", ctx)
	ret0, _ := ret[0].([]domain.Translation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTranslations indicates an expected call of GetTranslations.
func (mr *MockTranslationRepositoryMockRecorder) GetTranslations(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTranslations", reflect.TypeOf((*MockTranslationRepository)(nil).GetTranslations), ctx)
}

// SaveTranslation mocks base method.
func (m *MockTranslationRepository) SaveTranslation(ctx context.Context, translation *domain.Translation) (int32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveTranslation", ctx, translation)
	ret0, _ := ret[0].(int32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveTranslation indicates an expected call of SaveTranslation.
func (mr *MockTranslationRepositoryMockRecorder) SaveTranslation(ctx, translation any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveTranslation", reflect.TypeOf((*MockTranslationRepository)(nil).SaveTranslation), ctx, translation)
}
